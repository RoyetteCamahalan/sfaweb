//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimpleFFO.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    public partial class SimpleDB : DbContext
    {
        public SimpleDB()
            : base("name=SimpleDB")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<supplier> suppliers { get; set; }
        public virtual DbSet<institutiontype> institutiontypes { get; set; }
        public virtual DbSet<product> products { get; set; }
        public virtual DbSet<employee> employees { get; set; }
        public virtual DbSet<doctorclass> doctorclasses { get; set; }
        public virtual DbSet<doctor> doctors { get; set; }
        public virtual DbSet<institutiondoctormap> institutiondoctormaps { get; set; }
        public virtual DbSet<institution> institutions { get; set; }
        public virtual DbSet<activity> activities { get; set; }
        public virtual DbSet<attendee> attendees { get; set; }
        public virtual DbSet<practivity> practivities { get; set; }
        public virtual DbSet<practivitybudget> practivitybudgets { get; set; }
        public virtual DbSet<practivityoutcome> practivityoutcomes { get; set; }
        public virtual DbSet<specialization> specializations { get; set; }
        public virtual DbSet<budgettype> budgettypes { get; set; }
        public virtual DbSet<tieupproduct> tieupproducts { get; set; }
        public virtual DbSet<tieup> tieups { get; set; }
        public virtual DbSet<employeeleave> employeeleaves { get; set; }
        public virtual DbSet<leavetype> leavetypes { get; set; }
        public virtual DbSet<branch> branches { get; set; }
        public virtual DbSet<itemcategory> itemcategories { get; set; }
        public virtual DbSet<packaging> packagings { get; set; }
        public virtual DbSet<preference> preferences { get; set; }
        public virtual DbSet<requeststatustrail> requeststatustrails { get; set; }
        public virtual DbSet<cycleset> cyclesets { get; set; }
        public virtual DbSet<cycleday> cycledays { get; set; }
        public virtual DbSet<companyvehicle> companyvehicles { get; set; }
        public virtual DbSet<warehouse> warehouses { get; set; }
        public virtual DbSet<expensereportdetail> expensereportdetails { get; set; }
        public virtual DbSet<expensereport> expensereports { get; set; }
        public virtual DbSet<transportationtype> transportationtypes { get; set; }
        public virtual DbSet<approvaltree> approvaltrees { get; set; }
        public virtual DbSet<module> modules { get; set; }
        public virtual DbSet<statustrail> statustrails { get; set; }
        public virtual DbSet<fundliquidation> fundliquidations { get; set; }
        public virtual DbSet<fundrequest> fundrequests { get; set; }
        public virtual DbSet<vehiclerepairdetail> vehiclerepairdetails { get; set; }
        public virtual DbSet<vehiclerepair> vehiclerepairs { get; set; }
        public virtual DbSet<employeetype> employeetypes { get; set; }
        public virtual DbSet<userpriv> userprivs { get; set; }
        public virtual DbSet<useraccount> useraccounts { get; set; }
        public virtual DbSet<salaryloan> salaryloans { get; set; }
        public virtual DbSet<callnote> callnotes { get; set; }
        public virtual DbSet<call> calls { get; set; }
        public virtual DbSet<missedcall> missedcalls { get; set; }
        public virtual DbSet<plandetail> plandetails { get; set; }
        public virtual DbSet<plan> plans { get; set; }
        public virtual DbSet<rescheduledcall> rescheduledcalls { get; set; }
        public virtual DbSet<signature> signatures { get; set; }
        public virtual DbSet<reason> reasons { get; set; }
        public virtual DbSet<territory> territories { get; set; }
        public virtual DbSet<systemsubmodule> systemsubmodules { get; set; }
        public virtual DbSet<usersubpriv> usersubprivs { get; set; }
        public virtual DbSet<adminreport> adminreports { get; set; }
        public virtual DbSet<userlog> userlogs { get; set; }
        public virtual DbSet<appversion> appversions { get; set; }
        public virtual DbSet<callevalnote> callevalnotes { get; set; }
        public virtual DbSet<callevaluation> callevaluations { get; set; }
        public virtual DbSet<callmaterial> callmaterials { get; set; }
        public virtual DbSet<evaluation> evaluations { get; set; }
        public virtual DbSet<evaluationtype> evaluationtypes { get; set; }
        public virtual DbSet<jointcall> jointcalls { get; set; }
        public virtual DbSet<material> materials { get; set; }
        public virtual DbSet<serviceattendee> serviceattendees { get; set; }
        public virtual DbSet<service> services { get; set; }
        public virtual DbSet<miscexpensecode> miscexpensecodes { get; set; }
        public virtual DbSet<expensereportmiscellaneou> expensereportmiscellaneous { get; set; }
        public virtual DbSet<vendorcategory> vendorcategories { get; set; }
    
        public virtual ObjectResult<spReportDashboard_Result> spReportDashboard(Nullable<int> operation, Nullable<int> soperation, string search, Nullable<int> filterby, Nullable<long> branchid, Nullable<long> warehouseid, Nullable<int> cycleset, Nullable<int> cyclenumber, Nullable<int> quarter, Nullable<long> employeeid, Nullable<long> bbdmid, Nullable<long> rbdmid, Nullable<bool> isweb, Nullable<bool> isexport, Nullable<int> isactive, Nullable<int> mdtype, string signaturerooturl, string baseurl, Nullable<int> specializationid, Nullable<System.DateTime> date)
        {
            var operationParameter = operation.HasValue ?
                new ObjectParameter("operation", operation) :
                new ObjectParameter("operation", typeof(int));
    
            var soperationParameter = soperation.HasValue ?
                new ObjectParameter("soperation", soperation) :
                new ObjectParameter("soperation", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            var filterbyParameter = filterby.HasValue ?
                new ObjectParameter("filterby", filterby) :
                new ObjectParameter("filterby", typeof(int));
    
            var branchidParameter = branchid.HasValue ?
                new ObjectParameter("branchid", branchid) :
                new ObjectParameter("branchid", typeof(long));
    
            var warehouseidParameter = warehouseid.HasValue ?
                new ObjectParameter("warehouseid", warehouseid) :
                new ObjectParameter("warehouseid", typeof(long));
    
            var cyclesetParameter = cycleset.HasValue ?
                new ObjectParameter("cycleset", cycleset) :
                new ObjectParameter("cycleset", typeof(int));
    
            var cyclenumberParameter = cyclenumber.HasValue ?
                new ObjectParameter("cyclenumber", cyclenumber) :
                new ObjectParameter("cyclenumber", typeof(int));
    
            var quarterParameter = quarter.HasValue ?
                new ObjectParameter("quarter", quarter) :
                new ObjectParameter("quarter", typeof(int));
    
            var employeeidParameter = employeeid.HasValue ?
                new ObjectParameter("employeeid", employeeid) :
                new ObjectParameter("employeeid", typeof(long));
    
            var bbdmidParameter = bbdmid.HasValue ?
                new ObjectParameter("bbdmid", bbdmid) :
                new ObjectParameter("bbdmid", typeof(long));
    
            var rbdmidParameter = rbdmid.HasValue ?
                new ObjectParameter("rbdmid", rbdmid) :
                new ObjectParameter("rbdmid", typeof(long));
    
            var iswebParameter = isweb.HasValue ?
                new ObjectParameter("isweb", isweb) :
                new ObjectParameter("isweb", typeof(bool));
    
            var isexportParameter = isexport.HasValue ?
                new ObjectParameter("isexport", isexport) :
                new ObjectParameter("isexport", typeof(bool));
    
            var isactiveParameter = isactive.HasValue ?
                new ObjectParameter("isactive", isactive) :
                new ObjectParameter("isactive", typeof(int));
    
            var mdtypeParameter = mdtype.HasValue ?
                new ObjectParameter("mdtype", mdtype) :
                new ObjectParameter("mdtype", typeof(int));
    
            var signaturerooturlParameter = signaturerooturl != null ?
                new ObjectParameter("signaturerooturl", signaturerooturl) :
                new ObjectParameter("signaturerooturl", typeof(string));
    
            var baseurlParameter = baseurl != null ?
                new ObjectParameter("baseurl", baseurl) :
                new ObjectParameter("baseurl", typeof(string));
    
            var specializationidParameter = specializationid.HasValue ?
                new ObjectParameter("specializationid", specializationid) :
                new ObjectParameter("specializationid", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spReportDashboard_Result>("spReportDashboard", operationParameter, soperationParameter, searchParameter, filterbyParameter, branchidParameter, warehouseidParameter, cyclesetParameter, cyclenumberParameter, quarterParameter, employeeidParameter, bbdmidParameter, rbdmidParameter, iswebParameter, isexportParameter, isactiveParameter, mdtypeParameter, signaturerooturlParameter, baseurlParameter, specializationidParameter, dateParameter);
        }
    }
}
